/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './front/routes/__root'
import { Route as TunerRouteImport } from './front/routes/tuner/route'
import { Route as CmRouteImport } from './front/routes/cm/route'
import { Route as BibleRouteImport } from './front/routes/bible/route'
import { Route as IndexImport } from './front/routes/index'
import { Route as TunerIndexImport } from './front/routes/tuner/index'
import { Route as CmIndexImport } from './front/routes/cm/index'
import { Route as BibleIndexImport } from './front/routes/bible/index'
import { Route as TunerIImport } from './front/routes/tuner/i'
import { Route as BibleTranImport } from './front/routes/bible/tran'
import { Route as BibleSearchImport } from './front/routes/bible/search'
import { Route as BibleIImport } from './front/routes/bible/i'
import { Route as otherAppNameRouteImport } from './front/routes/!other.$appName/route'
import { Route as CmLiIndexImport } from './front/routes/cm/li/index'
import { Route as CmIIndexImport } from './front/routes/cm/i/index'
import { Route as otherAppNameIndexImport } from './front/routes/!other.$appName/index'
import { Route as CmLiSelImport } from './front/routes/cm/li/sel'
import { Route as CmLiFavImport } from './front/routes/cm/li/fav'
import { Route as CmLiEventsImport } from './front/routes/cm/li/events'
import { Route as CmEditMp3RulesImport } from './front/routes/cm/edit/mp3Rules'
import { Route as CmEditEventsImport } from './front/routes/cm/edit/events'
import { Route as CmEditEEImport } from './front/routes/cm/edit/e-e'
import { Route as CmEditChordImport } from './front/routes/cm/edit/chord'
import { Route as CmEditComsIndexImport } from './front/routes/cm/edit/coms/index'
import { Route as CmEditCatsIndexImport } from './front/routes/cm/edit/cats/index'
import { Route as otherAppNameSettingsIndexImport } from './front/routes/!other.$appName/settings/index'
import { Route as otherAppNameSchsIndexImport } from './front/routes/!other.$appName/schs/index'
import { Route as otherAppNameAuthIndexImport } from './front/routes/!other.$appName/auth/index'
import { Route as otherAppNameActionsIndexImport } from './front/routes/!other.$appName/actions/index'
import { Route as CmLiCatCatwImport } from './front/routes/cm/li/cat.$catw'
import { Route as CmEditCatsCatwImport } from './front/routes/cm/edit/cats/$catw'
import { Route as otherAppNameSettingsConsoleImport } from './front/routes/!other.$appName/settings/console'
import { Route as CmEditComsComwRouteImport } from './front/routes/cm/edit/coms/$comw/route'
import { Route as CmEditComsComwIndexImport } from './front/routes/cm/edit/coms/$comw/index'
import { Route as otherAppNameActionsFilesIndexImport } from './front/routes/!other.$appName/actions/files/index'

// Create Virtual Routes

const ScheduleDayIndexLazyImport = createFileRoute('/schedule-day/')()
const CmEditIndexLazyImport = createFileRoute('/cm/edit/')()

// Create/Update Routes

const TunerRouteRoute = TunerRouteImport.update({
  id: '/tuner',
  path: '/tuner',
  getParentRoute: () => rootRoute,
} as any)

const CmRouteRoute = CmRouteImport.update({
  id: '/cm',
  path: '/cm',
  getParentRoute: () => rootRoute,
} as any)

const BibleRouteRoute = BibleRouteImport.update({
  id: '/bible',
  path: '/bible',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ScheduleDayIndexLazyRoute = ScheduleDayIndexLazyImport.update({
  id: '/schedule-day/',
  path: '/schedule-day/',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./front/routes/schedule-day/index.lazy').then((d) => d.Route),
)

const TunerIndexRoute = TunerIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => TunerRouteRoute,
} as any)

const CmIndexRoute = CmIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => CmRouteRoute,
} as any)

const BibleIndexRoute = BibleIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => BibleRouteRoute,
} as any)

const TunerIRoute = TunerIImport.update({
  id: '/i',
  path: '/i',
  getParentRoute: () => TunerRouteRoute,
} as any)

const BibleTranRoute = BibleTranImport.update({
  id: '/tran',
  path: '/tran',
  getParentRoute: () => BibleRouteRoute,
} as any)

const BibleSearchRoute = BibleSearchImport.update({
  id: '/search',
  path: '/search',
  getParentRoute: () => BibleRouteRoute,
} as any)

const BibleIRoute = BibleIImport.update({
  id: '/i',
  path: '/i',
  getParentRoute: () => BibleRouteRoute,
} as any)

const otherAppNameRouteRoute = otherAppNameRouteImport.update({
  id: '/!other/$appName',
  path: '/!other/$appName',
  getParentRoute: () => rootRoute,
} as any)

const CmEditIndexLazyRoute = CmEditIndexLazyImport.update({
  id: '/edit/',
  path: '/edit/',
  getParentRoute: () => CmRouteRoute,
} as any).lazy(() =>
  import('./front/routes/cm/edit/index.lazy').then((d) => d.Route),
)

const CmLiIndexRoute = CmLiIndexImport.update({
  id: '/li/',
  path: '/li/',
  getParentRoute: () => CmRouteRoute,
} as any)

const CmIIndexRoute = CmIIndexImport.update({
  id: '/i/',
  path: '/i/',
  getParentRoute: () => CmRouteRoute,
} as any)

const otherAppNameIndexRoute = otherAppNameIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => otherAppNameRouteRoute,
} as any)

const CmLiSelRoute = CmLiSelImport.update({
  id: '/li/sel',
  path: '/li/sel',
  getParentRoute: () => CmRouteRoute,
} as any)

const CmLiFavRoute = CmLiFavImport.update({
  id: '/li/fav',
  path: '/li/fav',
  getParentRoute: () => CmRouteRoute,
} as any)

const CmLiEventsRoute = CmLiEventsImport.update({
  id: '/li/events',
  path: '/li/events',
  getParentRoute: () => CmRouteRoute,
} as any)

const CmEditMp3RulesRoute = CmEditMp3RulesImport.update({
  id: '/edit/mp3Rules',
  path: '/edit/mp3Rules',
  getParentRoute: () => CmRouteRoute,
} as any)

const CmEditEventsRoute = CmEditEventsImport.update({
  id: '/edit/events',
  path: '/edit/events',
  getParentRoute: () => CmRouteRoute,
} as any)

const CmEditEERoute = CmEditEEImport.update({
  id: '/edit/e-e',
  path: '/edit/e-e',
  getParentRoute: () => CmRouteRoute,
} as any)

const CmEditChordRoute = CmEditChordImport.update({
  id: '/edit/chord',
  path: '/edit/chord',
  getParentRoute: () => CmRouteRoute,
} as any)

const CmEditComsIndexRoute = CmEditComsIndexImport.update({
  id: '/edit/coms/',
  path: '/edit/coms/',
  getParentRoute: () => CmRouteRoute,
} as any)

const CmEditCatsIndexRoute = CmEditCatsIndexImport.update({
  id: '/edit/cats/',
  path: '/edit/cats/',
  getParentRoute: () => CmRouteRoute,
} as any)

const otherAppNameSettingsIndexRoute = otherAppNameSettingsIndexImport.update({
  id: '/settings/',
  path: '/settings/',
  getParentRoute: () => otherAppNameRouteRoute,
} as any)

const otherAppNameSchsIndexRoute = otherAppNameSchsIndexImport.update({
  id: '/schs/',
  path: '/schs/',
  getParentRoute: () => otherAppNameRouteRoute,
} as any)

const otherAppNameAuthIndexRoute = otherAppNameAuthIndexImport.update({
  id: '/auth/',
  path: '/auth/',
  getParentRoute: () => otherAppNameRouteRoute,
} as any)

const otherAppNameActionsIndexRoute = otherAppNameActionsIndexImport.update({
  id: '/actions/',
  path: '/actions/',
  getParentRoute: () => otherAppNameRouteRoute,
} as any)

const CmLiCatCatwRoute = CmLiCatCatwImport.update({
  id: '/li/cat/$catw',
  path: '/li/cat/$catw',
  getParentRoute: () => CmRouteRoute,
} as any)

const CmEditCatsCatwRoute = CmEditCatsCatwImport.update({
  id: '/edit/cats/$catw',
  path: '/edit/cats/$catw',
  getParentRoute: () => CmRouteRoute,
} as any)

const otherAppNameSettingsConsoleRoute =
  otherAppNameSettingsConsoleImport.update({
    id: '/settings/console',
    path: '/settings/console',
    getParentRoute: () => otherAppNameRouteRoute,
  } as any)

const CmEditComsComwRouteRoute = CmEditComsComwRouteImport.update({
  id: '/edit/coms/$comw',
  path: '/edit/coms/$comw',
  getParentRoute: () => CmRouteRoute,
} as any)

const CmEditComsComwIndexRoute = CmEditComsComwIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => CmEditComsComwRouteRoute,
} as any)

const otherAppNameActionsFilesIndexRoute =
  otherAppNameActionsFilesIndexImport.update({
    id: '/actions/files/',
    path: '/actions/files/',
    getParentRoute: () => otherAppNameRouteRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/bible': {
      id: '/bible'
      path: '/bible'
      fullPath: '/bible'
      preLoaderRoute: typeof BibleRouteImport
      parentRoute: typeof rootRoute
    }
    '/cm': {
      id: '/cm'
      path: '/cm'
      fullPath: '/cm'
      preLoaderRoute: typeof CmRouteImport
      parentRoute: typeof rootRoute
    }
    '/tuner': {
      id: '/tuner'
      path: '/tuner'
      fullPath: '/tuner'
      preLoaderRoute: typeof TunerRouteImport
      parentRoute: typeof rootRoute
    }
    '/!other/$appName': {
      id: '/!other/$appName'
      path: '/!other/$appName'
      fullPath: '/!other/$appName'
      preLoaderRoute: typeof otherAppNameRouteImport
      parentRoute: typeof rootRoute
    }
    '/bible/i': {
      id: '/bible/i'
      path: '/i'
      fullPath: '/bible/i'
      preLoaderRoute: typeof BibleIImport
      parentRoute: typeof BibleRouteImport
    }
    '/bible/search': {
      id: '/bible/search'
      path: '/search'
      fullPath: '/bible/search'
      preLoaderRoute: typeof BibleSearchImport
      parentRoute: typeof BibleRouteImport
    }
    '/bible/tran': {
      id: '/bible/tran'
      path: '/tran'
      fullPath: '/bible/tran'
      preLoaderRoute: typeof BibleTranImport
      parentRoute: typeof BibleRouteImport
    }
    '/tuner/i': {
      id: '/tuner/i'
      path: '/i'
      fullPath: '/tuner/i'
      preLoaderRoute: typeof TunerIImport
      parentRoute: typeof TunerRouteImport
    }
    '/bible/': {
      id: '/bible/'
      path: '/'
      fullPath: '/bible/'
      preLoaderRoute: typeof BibleIndexImport
      parentRoute: typeof BibleRouteImport
    }
    '/cm/': {
      id: '/cm/'
      path: '/'
      fullPath: '/cm/'
      preLoaderRoute: typeof CmIndexImport
      parentRoute: typeof CmRouteImport
    }
    '/tuner/': {
      id: '/tuner/'
      path: '/'
      fullPath: '/tuner/'
      preLoaderRoute: typeof TunerIndexImport
      parentRoute: typeof TunerRouteImport
    }
    '/schedule-day/': {
      id: '/schedule-day/'
      path: '/schedule-day'
      fullPath: '/schedule-day'
      preLoaderRoute: typeof ScheduleDayIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/cm/edit/chord': {
      id: '/cm/edit/chord'
      path: '/edit/chord'
      fullPath: '/cm/edit/chord'
      preLoaderRoute: typeof CmEditChordImport
      parentRoute: typeof CmRouteImport
    }
    '/cm/edit/e-e': {
      id: '/cm/edit/e-e'
      path: '/edit/e-e'
      fullPath: '/cm/edit/e-e'
      preLoaderRoute: typeof CmEditEEImport
      parentRoute: typeof CmRouteImport
    }
    '/cm/edit/events': {
      id: '/cm/edit/events'
      path: '/edit/events'
      fullPath: '/cm/edit/events'
      preLoaderRoute: typeof CmEditEventsImport
      parentRoute: typeof CmRouteImport
    }
    '/cm/edit/mp3Rules': {
      id: '/cm/edit/mp3Rules'
      path: '/edit/mp3Rules'
      fullPath: '/cm/edit/mp3Rules'
      preLoaderRoute: typeof CmEditMp3RulesImport
      parentRoute: typeof CmRouteImport
    }
    '/cm/li/events': {
      id: '/cm/li/events'
      path: '/li/events'
      fullPath: '/cm/li/events'
      preLoaderRoute: typeof CmLiEventsImport
      parentRoute: typeof CmRouteImport
    }
    '/cm/li/fav': {
      id: '/cm/li/fav'
      path: '/li/fav'
      fullPath: '/cm/li/fav'
      preLoaderRoute: typeof CmLiFavImport
      parentRoute: typeof CmRouteImport
    }
    '/cm/li/sel': {
      id: '/cm/li/sel'
      path: '/li/sel'
      fullPath: '/cm/li/sel'
      preLoaderRoute: typeof CmLiSelImport
      parentRoute: typeof CmRouteImport
    }
    '/!other/$appName/': {
      id: '/!other/$appName/'
      path: '/'
      fullPath: '/!other/$appName/'
      preLoaderRoute: typeof otherAppNameIndexImport
      parentRoute: typeof otherAppNameRouteImport
    }
    '/cm/i/': {
      id: '/cm/i/'
      path: '/i'
      fullPath: '/cm/i'
      preLoaderRoute: typeof CmIIndexImport
      parentRoute: typeof CmRouteImport
    }
    '/cm/li/': {
      id: '/cm/li/'
      path: '/li'
      fullPath: '/cm/li'
      preLoaderRoute: typeof CmLiIndexImport
      parentRoute: typeof CmRouteImport
    }
    '/cm/edit/': {
      id: '/cm/edit/'
      path: '/edit'
      fullPath: '/cm/edit'
      preLoaderRoute: typeof CmEditIndexLazyImport
      parentRoute: typeof CmRouteImport
    }
    '/cm/edit/coms/$comw': {
      id: '/cm/edit/coms/$comw'
      path: '/edit/coms/$comw'
      fullPath: '/cm/edit/coms/$comw'
      preLoaderRoute: typeof CmEditComsComwRouteImport
      parentRoute: typeof CmRouteImport
    }
    '/!other/$appName/settings/console': {
      id: '/!other/$appName/settings/console'
      path: '/settings/console'
      fullPath: '/!other/$appName/settings/console'
      preLoaderRoute: typeof otherAppNameSettingsConsoleImport
      parentRoute: typeof otherAppNameRouteImport
    }
    '/cm/edit/cats/$catw': {
      id: '/cm/edit/cats/$catw'
      path: '/edit/cats/$catw'
      fullPath: '/cm/edit/cats/$catw'
      preLoaderRoute: typeof CmEditCatsCatwImport
      parentRoute: typeof CmRouteImport
    }
    '/cm/li/cat/$catw': {
      id: '/cm/li/cat/$catw'
      path: '/li/cat/$catw'
      fullPath: '/cm/li/cat/$catw'
      preLoaderRoute: typeof CmLiCatCatwImport
      parentRoute: typeof CmRouteImport
    }
    '/!other/$appName/actions/': {
      id: '/!other/$appName/actions/'
      path: '/actions'
      fullPath: '/!other/$appName/actions'
      preLoaderRoute: typeof otherAppNameActionsIndexImport
      parentRoute: typeof otherAppNameRouteImport
    }
    '/!other/$appName/auth/': {
      id: '/!other/$appName/auth/'
      path: '/auth'
      fullPath: '/!other/$appName/auth'
      preLoaderRoute: typeof otherAppNameAuthIndexImport
      parentRoute: typeof otherAppNameRouteImport
    }
    '/!other/$appName/schs/': {
      id: '/!other/$appName/schs/'
      path: '/schs'
      fullPath: '/!other/$appName/schs'
      preLoaderRoute: typeof otherAppNameSchsIndexImport
      parentRoute: typeof otherAppNameRouteImport
    }
    '/!other/$appName/settings/': {
      id: '/!other/$appName/settings/'
      path: '/settings'
      fullPath: '/!other/$appName/settings'
      preLoaderRoute: typeof otherAppNameSettingsIndexImport
      parentRoute: typeof otherAppNameRouteImport
    }
    '/cm/edit/cats/': {
      id: '/cm/edit/cats/'
      path: '/edit/cats'
      fullPath: '/cm/edit/cats'
      preLoaderRoute: typeof CmEditCatsIndexImport
      parentRoute: typeof CmRouteImport
    }
    '/cm/edit/coms/': {
      id: '/cm/edit/coms/'
      path: '/edit/coms'
      fullPath: '/cm/edit/coms'
      preLoaderRoute: typeof CmEditComsIndexImport
      parentRoute: typeof CmRouteImport
    }
    '/!other/$appName/actions/files/': {
      id: '/!other/$appName/actions/files/'
      path: '/actions/files'
      fullPath: '/!other/$appName/actions/files'
      preLoaderRoute: typeof otherAppNameActionsFilesIndexImport
      parentRoute: typeof otherAppNameRouteImport
    }
    '/cm/edit/coms/$comw/': {
      id: '/cm/edit/coms/$comw/'
      path: '/'
      fullPath: '/cm/edit/coms/$comw/'
      preLoaderRoute: typeof CmEditComsComwIndexImport
      parentRoute: typeof CmEditComsComwRouteImport
    }
  }
}

// Create and export the route tree

interface BibleRouteRouteChildren {
  BibleIRoute: typeof BibleIRoute
  BibleSearchRoute: typeof BibleSearchRoute
  BibleTranRoute: typeof BibleTranRoute
  BibleIndexRoute: typeof BibleIndexRoute
}

const BibleRouteRouteChildren: BibleRouteRouteChildren = {
  BibleIRoute: BibleIRoute,
  BibleSearchRoute: BibleSearchRoute,
  BibleTranRoute: BibleTranRoute,
  BibleIndexRoute: BibleIndexRoute,
}

const BibleRouteRouteWithChildren = BibleRouteRoute._addFileChildren(
  BibleRouteRouteChildren,
)

interface CmEditComsComwRouteRouteChildren {
  CmEditComsComwIndexRoute: typeof CmEditComsComwIndexRoute
}

const CmEditComsComwRouteRouteChildren: CmEditComsComwRouteRouteChildren = {
  CmEditComsComwIndexRoute: CmEditComsComwIndexRoute,
}

const CmEditComsComwRouteRouteWithChildren =
  CmEditComsComwRouteRoute._addFileChildren(CmEditComsComwRouteRouteChildren)

interface CmRouteRouteChildren {
  CmIndexRoute: typeof CmIndexRoute
  CmEditChordRoute: typeof CmEditChordRoute
  CmEditEERoute: typeof CmEditEERoute
  CmEditEventsRoute: typeof CmEditEventsRoute
  CmEditMp3RulesRoute: typeof CmEditMp3RulesRoute
  CmLiEventsRoute: typeof CmLiEventsRoute
  CmLiFavRoute: typeof CmLiFavRoute
  CmLiSelRoute: typeof CmLiSelRoute
  CmIIndexRoute: typeof CmIIndexRoute
  CmLiIndexRoute: typeof CmLiIndexRoute
  CmEditIndexLazyRoute: typeof CmEditIndexLazyRoute
  CmEditComsComwRouteRoute: typeof CmEditComsComwRouteRouteWithChildren
  CmEditCatsCatwRoute: typeof CmEditCatsCatwRoute
  CmLiCatCatwRoute: typeof CmLiCatCatwRoute
  CmEditCatsIndexRoute: typeof CmEditCatsIndexRoute
  CmEditComsIndexRoute: typeof CmEditComsIndexRoute
}

const CmRouteRouteChildren: CmRouteRouteChildren = {
  CmIndexRoute: CmIndexRoute,
  CmEditChordRoute: CmEditChordRoute,
  CmEditEERoute: CmEditEERoute,
  CmEditEventsRoute: CmEditEventsRoute,
  CmEditMp3RulesRoute: CmEditMp3RulesRoute,
  CmLiEventsRoute: CmLiEventsRoute,
  CmLiFavRoute: CmLiFavRoute,
  CmLiSelRoute: CmLiSelRoute,
  CmIIndexRoute: CmIIndexRoute,
  CmLiIndexRoute: CmLiIndexRoute,
  CmEditIndexLazyRoute: CmEditIndexLazyRoute,
  CmEditComsComwRouteRoute: CmEditComsComwRouteRouteWithChildren,
  CmEditCatsCatwRoute: CmEditCatsCatwRoute,
  CmLiCatCatwRoute: CmLiCatCatwRoute,
  CmEditCatsIndexRoute: CmEditCatsIndexRoute,
  CmEditComsIndexRoute: CmEditComsIndexRoute,
}

const CmRouteRouteWithChildren =
  CmRouteRoute._addFileChildren(CmRouteRouteChildren)

interface TunerRouteRouteChildren {
  TunerIRoute: typeof TunerIRoute
  TunerIndexRoute: typeof TunerIndexRoute
}

const TunerRouteRouteChildren: TunerRouteRouteChildren = {
  TunerIRoute: TunerIRoute,
  TunerIndexRoute: TunerIndexRoute,
}

const TunerRouteRouteWithChildren = TunerRouteRoute._addFileChildren(
  TunerRouteRouteChildren,
)

interface otherAppNameRouteRouteChildren {
  otherAppNameIndexRoute: typeof otherAppNameIndexRoute
  otherAppNameSettingsConsoleRoute: typeof otherAppNameSettingsConsoleRoute
  otherAppNameActionsIndexRoute: typeof otherAppNameActionsIndexRoute
  otherAppNameAuthIndexRoute: typeof otherAppNameAuthIndexRoute
  otherAppNameSchsIndexRoute: typeof otherAppNameSchsIndexRoute
  otherAppNameSettingsIndexRoute: typeof otherAppNameSettingsIndexRoute
  otherAppNameActionsFilesIndexRoute: typeof otherAppNameActionsFilesIndexRoute
}

const otherAppNameRouteRouteChildren: otherAppNameRouteRouteChildren = {
  otherAppNameIndexRoute: otherAppNameIndexRoute,
  otherAppNameSettingsConsoleRoute: otherAppNameSettingsConsoleRoute,
  otherAppNameActionsIndexRoute: otherAppNameActionsIndexRoute,
  otherAppNameAuthIndexRoute: otherAppNameAuthIndexRoute,
  otherAppNameSchsIndexRoute: otherAppNameSchsIndexRoute,
  otherAppNameSettingsIndexRoute: otherAppNameSettingsIndexRoute,
  otherAppNameActionsFilesIndexRoute: otherAppNameActionsFilesIndexRoute,
}

const otherAppNameRouteRouteWithChildren =
  otherAppNameRouteRoute._addFileChildren(otherAppNameRouteRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/bible': typeof BibleRouteRouteWithChildren
  '/cm': typeof CmRouteRouteWithChildren
  '/tuner': typeof TunerRouteRouteWithChildren
  '/!other/$appName': typeof otherAppNameRouteRouteWithChildren
  '/bible/i': typeof BibleIRoute
  '/bible/search': typeof BibleSearchRoute
  '/bible/tran': typeof BibleTranRoute
  '/tuner/i': typeof TunerIRoute
  '/bible/': typeof BibleIndexRoute
  '/cm/': typeof CmIndexRoute
  '/tuner/': typeof TunerIndexRoute
  '/schedule-day': typeof ScheduleDayIndexLazyRoute
  '/cm/edit/chord': typeof CmEditChordRoute
  '/cm/edit/e-e': typeof CmEditEERoute
  '/cm/edit/events': typeof CmEditEventsRoute
  '/cm/edit/mp3Rules': typeof CmEditMp3RulesRoute
  '/cm/li/events': typeof CmLiEventsRoute
  '/cm/li/fav': typeof CmLiFavRoute
  '/cm/li/sel': typeof CmLiSelRoute
  '/!other/$appName/': typeof otherAppNameIndexRoute
  '/cm/i': typeof CmIIndexRoute
  '/cm/li': typeof CmLiIndexRoute
  '/cm/edit': typeof CmEditIndexLazyRoute
  '/cm/edit/coms/$comw': typeof CmEditComsComwRouteRouteWithChildren
  '/!other/$appName/settings/console': typeof otherAppNameSettingsConsoleRoute
  '/cm/edit/cats/$catw': typeof CmEditCatsCatwRoute
  '/cm/li/cat/$catw': typeof CmLiCatCatwRoute
  '/!other/$appName/actions': typeof otherAppNameActionsIndexRoute
  '/!other/$appName/auth': typeof otherAppNameAuthIndexRoute
  '/!other/$appName/schs': typeof otherAppNameSchsIndexRoute
  '/!other/$appName/settings': typeof otherAppNameSettingsIndexRoute
  '/cm/edit/cats': typeof CmEditCatsIndexRoute
  '/cm/edit/coms': typeof CmEditComsIndexRoute
  '/!other/$appName/actions/files': typeof otherAppNameActionsFilesIndexRoute
  '/cm/edit/coms/$comw/': typeof CmEditComsComwIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/bible/i': typeof BibleIRoute
  '/bible/search': typeof BibleSearchRoute
  '/bible/tran': typeof BibleTranRoute
  '/tuner/i': typeof TunerIRoute
  '/bible': typeof BibleIndexRoute
  '/cm': typeof CmIndexRoute
  '/tuner': typeof TunerIndexRoute
  '/schedule-day': typeof ScheduleDayIndexLazyRoute
  '/cm/edit/chord': typeof CmEditChordRoute
  '/cm/edit/e-e': typeof CmEditEERoute
  '/cm/edit/events': typeof CmEditEventsRoute
  '/cm/edit/mp3Rules': typeof CmEditMp3RulesRoute
  '/cm/li/events': typeof CmLiEventsRoute
  '/cm/li/fav': typeof CmLiFavRoute
  '/cm/li/sel': typeof CmLiSelRoute
  '/!other/$appName': typeof otherAppNameIndexRoute
  '/cm/i': typeof CmIIndexRoute
  '/cm/li': typeof CmLiIndexRoute
  '/cm/edit': typeof CmEditIndexLazyRoute
  '/!other/$appName/settings/console': typeof otherAppNameSettingsConsoleRoute
  '/cm/edit/cats/$catw': typeof CmEditCatsCatwRoute
  '/cm/li/cat/$catw': typeof CmLiCatCatwRoute
  '/!other/$appName/actions': typeof otherAppNameActionsIndexRoute
  '/!other/$appName/auth': typeof otherAppNameAuthIndexRoute
  '/!other/$appName/schs': typeof otherAppNameSchsIndexRoute
  '/!other/$appName/settings': typeof otherAppNameSettingsIndexRoute
  '/cm/edit/cats': typeof CmEditCatsIndexRoute
  '/cm/edit/coms': typeof CmEditComsIndexRoute
  '/!other/$appName/actions/files': typeof otherAppNameActionsFilesIndexRoute
  '/cm/edit/coms/$comw': typeof CmEditComsComwIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/bible': typeof BibleRouteRouteWithChildren
  '/cm': typeof CmRouteRouteWithChildren
  '/tuner': typeof TunerRouteRouteWithChildren
  '/!other/$appName': typeof otherAppNameRouteRouteWithChildren
  '/bible/i': typeof BibleIRoute
  '/bible/search': typeof BibleSearchRoute
  '/bible/tran': typeof BibleTranRoute
  '/tuner/i': typeof TunerIRoute
  '/bible/': typeof BibleIndexRoute
  '/cm/': typeof CmIndexRoute
  '/tuner/': typeof TunerIndexRoute
  '/schedule-day/': typeof ScheduleDayIndexLazyRoute
  '/cm/edit/chord': typeof CmEditChordRoute
  '/cm/edit/e-e': typeof CmEditEERoute
  '/cm/edit/events': typeof CmEditEventsRoute
  '/cm/edit/mp3Rules': typeof CmEditMp3RulesRoute
  '/cm/li/events': typeof CmLiEventsRoute
  '/cm/li/fav': typeof CmLiFavRoute
  '/cm/li/sel': typeof CmLiSelRoute
  '/!other/$appName/': typeof otherAppNameIndexRoute
  '/cm/i/': typeof CmIIndexRoute
  '/cm/li/': typeof CmLiIndexRoute
  '/cm/edit/': typeof CmEditIndexLazyRoute
  '/cm/edit/coms/$comw': typeof CmEditComsComwRouteRouteWithChildren
  '/!other/$appName/settings/console': typeof otherAppNameSettingsConsoleRoute
  '/cm/edit/cats/$catw': typeof CmEditCatsCatwRoute
  '/cm/li/cat/$catw': typeof CmLiCatCatwRoute
  '/!other/$appName/actions/': typeof otherAppNameActionsIndexRoute
  '/!other/$appName/auth/': typeof otherAppNameAuthIndexRoute
  '/!other/$appName/schs/': typeof otherAppNameSchsIndexRoute
  '/!other/$appName/settings/': typeof otherAppNameSettingsIndexRoute
  '/cm/edit/cats/': typeof CmEditCatsIndexRoute
  '/cm/edit/coms/': typeof CmEditComsIndexRoute
  '/!other/$appName/actions/files/': typeof otherAppNameActionsFilesIndexRoute
  '/cm/edit/coms/$comw/': typeof CmEditComsComwIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/bible'
    | '/cm'
    | '/tuner'
    | '/!other/$appName'
    | '/bible/i'
    | '/bible/search'
    | '/bible/tran'
    | '/tuner/i'
    | '/bible/'
    | '/cm/'
    | '/tuner/'
    | '/schedule-day'
    | '/cm/edit/chord'
    | '/cm/edit/e-e'
    | '/cm/edit/events'
    | '/cm/edit/mp3Rules'
    | '/cm/li/events'
    | '/cm/li/fav'
    | '/cm/li/sel'
    | '/!other/$appName/'
    | '/cm/i'
    | '/cm/li'
    | '/cm/edit'
    | '/cm/edit/coms/$comw'
    | '/!other/$appName/settings/console'
    | '/cm/edit/cats/$catw'
    | '/cm/li/cat/$catw'
    | '/!other/$appName/actions'
    | '/!other/$appName/auth'
    | '/!other/$appName/schs'
    | '/!other/$appName/settings'
    | '/cm/edit/cats'
    | '/cm/edit/coms'
    | '/!other/$appName/actions/files'
    | '/cm/edit/coms/$comw/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/bible/i'
    | '/bible/search'
    | '/bible/tran'
    | '/tuner/i'
    | '/bible'
    | '/cm'
    | '/tuner'
    | '/schedule-day'
    | '/cm/edit/chord'
    | '/cm/edit/e-e'
    | '/cm/edit/events'
    | '/cm/edit/mp3Rules'
    | '/cm/li/events'
    | '/cm/li/fav'
    | '/cm/li/sel'
    | '/!other/$appName'
    | '/cm/i'
    | '/cm/li'
    | '/cm/edit'
    | '/!other/$appName/settings/console'
    | '/cm/edit/cats/$catw'
    | '/cm/li/cat/$catw'
    | '/!other/$appName/actions'
    | '/!other/$appName/auth'
    | '/!other/$appName/schs'
    | '/!other/$appName/settings'
    | '/cm/edit/cats'
    | '/cm/edit/coms'
    | '/!other/$appName/actions/files'
    | '/cm/edit/coms/$comw'
  id:
    | '__root__'
    | '/'
    | '/bible'
    | '/cm'
    | '/tuner'
    | '/!other/$appName'
    | '/bible/i'
    | '/bible/search'
    | '/bible/tran'
    | '/tuner/i'
    | '/bible/'
    | '/cm/'
    | '/tuner/'
    | '/schedule-day/'
    | '/cm/edit/chord'
    | '/cm/edit/e-e'
    | '/cm/edit/events'
    | '/cm/edit/mp3Rules'
    | '/cm/li/events'
    | '/cm/li/fav'
    | '/cm/li/sel'
    | '/!other/$appName/'
    | '/cm/i/'
    | '/cm/li/'
    | '/cm/edit/'
    | '/cm/edit/coms/$comw'
    | '/!other/$appName/settings/console'
    | '/cm/edit/cats/$catw'
    | '/cm/li/cat/$catw'
    | '/!other/$appName/actions/'
    | '/!other/$appName/auth/'
    | '/!other/$appName/schs/'
    | '/!other/$appName/settings/'
    | '/cm/edit/cats/'
    | '/cm/edit/coms/'
    | '/!other/$appName/actions/files/'
    | '/cm/edit/coms/$comw/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  BibleRouteRoute: typeof BibleRouteRouteWithChildren
  CmRouteRoute: typeof CmRouteRouteWithChildren
  TunerRouteRoute: typeof TunerRouteRouteWithChildren
  otherAppNameRouteRoute: typeof otherAppNameRouteRouteWithChildren
  ScheduleDayIndexLazyRoute: typeof ScheduleDayIndexLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  BibleRouteRoute: BibleRouteRouteWithChildren,
  CmRouteRoute: CmRouteRouteWithChildren,
  TunerRouteRoute: TunerRouteRouteWithChildren,
  otherAppNameRouteRoute: otherAppNameRouteRouteWithChildren,
  ScheduleDayIndexLazyRoute: ScheduleDayIndexLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/bible",
        "/cm",
        "/tuner",
        "/!other/$appName",
        "/schedule-day/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/bible": {
      "filePath": "bible/route.tsx",
      "children": [
        "/bible/i",
        "/bible/search",
        "/bible/tran",
        "/bible/"
      ]
    },
    "/cm": {
      "filePath": "cm/route.tsx",
      "children": [
        "/cm/",
        "/cm/edit/chord",
        "/cm/edit/e-e",
        "/cm/edit/events",
        "/cm/edit/mp3Rules",
        "/cm/li/events",
        "/cm/li/fav",
        "/cm/li/sel",
        "/cm/i/",
        "/cm/li/",
        "/cm/edit/",
        "/cm/edit/coms/$comw",
        "/cm/edit/cats/$catw",
        "/cm/li/cat/$catw",
        "/cm/edit/cats/",
        "/cm/edit/coms/"
      ]
    },
    "/tuner": {
      "filePath": "tuner/route.tsx",
      "children": [
        "/tuner/i",
        "/tuner/"
      ]
    },
    "/!other/$appName": {
      "filePath": "!other.$appName/route.tsx",
      "children": [
        "/!other/$appName/",
        "/!other/$appName/settings/console",
        "/!other/$appName/actions/",
        "/!other/$appName/auth/",
        "/!other/$appName/schs/",
        "/!other/$appName/settings/",
        "/!other/$appName/actions/files/"
      ]
    },
    "/bible/i": {
      "filePath": "bible/i.tsx",
      "parent": "/bible"
    },
    "/bible/search": {
      "filePath": "bible/search.tsx",
      "parent": "/bible"
    },
    "/bible/tran": {
      "filePath": "bible/tran.tsx",
      "parent": "/bible"
    },
    "/tuner/i": {
      "filePath": "tuner/i.tsx",
      "parent": "/tuner"
    },
    "/bible/": {
      "filePath": "bible/index.tsx",
      "parent": "/bible"
    },
    "/cm/": {
      "filePath": "cm/index.tsx",
      "parent": "/cm"
    },
    "/tuner/": {
      "filePath": "tuner/index.tsx",
      "parent": "/tuner"
    },
    "/schedule-day/": {
      "filePath": "schedule-day/index.lazy.tsx"
    },
    "/cm/edit/chord": {
      "filePath": "cm/edit/chord.tsx",
      "parent": "/cm"
    },
    "/cm/edit/e-e": {
      "filePath": "cm/edit/e-e.tsx",
      "parent": "/cm"
    },
    "/cm/edit/events": {
      "filePath": "cm/edit/events.tsx",
      "parent": "/cm"
    },
    "/cm/edit/mp3Rules": {
      "filePath": "cm/edit/mp3Rules.tsx",
      "parent": "/cm"
    },
    "/cm/li/events": {
      "filePath": "cm/li/events.tsx",
      "parent": "/cm"
    },
    "/cm/li/fav": {
      "filePath": "cm/li/fav.tsx",
      "parent": "/cm"
    },
    "/cm/li/sel": {
      "filePath": "cm/li/sel.tsx",
      "parent": "/cm"
    },
    "/!other/$appName/": {
      "filePath": "!other.$appName/index.tsx",
      "parent": "/!other/$appName"
    },
    "/cm/i/": {
      "filePath": "cm/i/index.tsx",
      "parent": "/cm"
    },
    "/cm/li/": {
      "filePath": "cm/li/index.tsx",
      "parent": "/cm"
    },
    "/cm/edit/": {
      "filePath": "cm/edit/index.lazy.tsx",
      "parent": "/cm"
    },
    "/cm/edit/coms/$comw": {
      "filePath": "cm/edit/coms/$comw/route.tsx",
      "parent": "/cm",
      "children": [
        "/cm/edit/coms/$comw/"
      ]
    },
    "/!other/$appName/settings/console": {
      "filePath": "!other.$appName/settings/console.tsx",
      "parent": "/!other/$appName"
    },
    "/cm/edit/cats/$catw": {
      "filePath": "cm/edit/cats/$catw.tsx",
      "parent": "/cm"
    },
    "/cm/li/cat/$catw": {
      "filePath": "cm/li/cat.$catw.tsx",
      "parent": "/cm"
    },
    "/!other/$appName/actions/": {
      "filePath": "!other.$appName/actions/index.tsx",
      "parent": "/!other/$appName"
    },
    "/!other/$appName/auth/": {
      "filePath": "!other.$appName/auth/index.tsx",
      "parent": "/!other/$appName"
    },
    "/!other/$appName/schs/": {
      "filePath": "!other.$appName/schs/index.tsx",
      "parent": "/!other/$appName"
    },
    "/!other/$appName/settings/": {
      "filePath": "!other.$appName/settings/index.tsx",
      "parent": "/!other/$appName"
    },
    "/cm/edit/cats/": {
      "filePath": "cm/edit/cats/index.tsx",
      "parent": "/cm"
    },
    "/cm/edit/coms/": {
      "filePath": "cm/edit/coms/index.tsx",
      "parent": "/cm"
    },
    "/!other/$appName/actions/files/": {
      "filePath": "!other.$appName/actions/files/index.tsx",
      "parent": "/!other/$appName"
    },
    "/cm/edit/coms/$comw/": {
      "filePath": "cm/edit/coms/$comw/index.tsx",
      "parent": "/cm/edit/coms/$comw"
    }
  }
}
ROUTE_MANIFEST_END */
