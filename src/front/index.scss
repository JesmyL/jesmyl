body {
  --font-family: -apple-system, montserrat, BlinkMacSystemFont, "Segoe UI",
    "Roboto", "Oxygen", "Ubuntu", "Cantarell", "Fira Sans", "Droid Sans",
    "Helvetica Neue", main, sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;

  --color--1: #242a26;
  --color--2: #3b4b40;
  --color--3: #d5e6d6;
  --color--4: #b2b9b1;
  --color--5: #1a1c19;
  --color--6: #d3e5d7;
  --color--7: #b5f2c8;
  --color--8: var(--color--5);
  --color--ko: #ec6969;
  --color--ok: #9bec69;
}

body {
  --svg-color: var(--color--4);
  --text-color: var(--color--4);
  --current-bg: var(--color--5);

  margin: 0;
  padding: 0;
  width: 100vw;
  height: 100vh;
  font-size: 16px;

  background-color: var(--current-bg);
  font-family: var(--font-family);
  color: var(--text-color);

  &.light-theme {
    --color--1: #eaf1e9;
    --color--2: #d5e8d5;
    --color--3: #122217;
    --color--4: #414840;
    --color--5: #fbfdf8;
    --color--6: #f8fbf4;
    --color--7: #336a4a;
    --color--8: #fbfdf8;
    --color--ok: #47bb00;
  }

  #root {
    height: 100%;
    overflow: hidden;
  }

  * {
    -webkit-touch-callout: none;
  }
}

.color-- {
  &1 {
    --svg-color: var(--color--1);
    color: var(--color--1);
  }

  &3 {
    --svg-color: var(--color--3);
    color: var(--color--3);
  }

  &7 {
    color: var(--color--7);
  }
}

* {
  -webkit-tap-highlight-color: transparent;
  outline: 0;
  border: none;
}

.error-message {
  --svg-color: var(--color--ko);
  color: var(--color--ko);
}

.success-message {
  --svg-color: var(--color--ok);
  color: var(--color--ok);
}

input[type="radio"],
input[type="button"] {
  cursor: pointer;
}

.inline-block {
  display: inline-block;
}

.inline {
  display: inline;
}

.block {
  display: block;
}

.disabled,
:disabled {
  opacity: 0.5;

  &.clickable {
    cursor: inherit;
  }

  &:not(.clickable) {
    pointer-events: none;
  }
}

:not(svg) {
  box-sizing: border-box;
}

.ellipsis {
  white-space: nowrap;
  text-overflow: ellipsis;
  overflow: hidden;
}

.nowrap {
  white-space: nowrap;
}

.white-pre {
  white-space: pre;

  &-line {
    white-space: pre-line;
  }
}

.over- {
  &hidden {
    overflow: hidden;
  }

  &auto {
    overflow: auto;
  }
}

.input,
input,
textarea {
  font-size: 1em;
  font-family: var(--font-family);
  background-color: var(--color--2);
  color: var(--text-color);

  &::placeholder {
    color: var(--color--5);
  }
}

.half-width {
  width: 50%;
}

.half-height {
  height: 50%;
}

.full-width {
  width: 100%;
}

.full-height {
  height: 100%;
}

.full-min-width {
  min-width: 100%;
}

.full-min-height {
  min-height: 100%;
}

.full-max-width {
  max-width: 100%;
}

.min-width-90 {
  min-width: 90%;
}

.full-max-height {
  max-height: 100%;
}

.half-height {
  height: 50%;
}

.bg-inherit {
  background: inherit;
}

.vertical-middle {
  vertical-align: middle;
}

.flex {
  display: flex;

  &.flex-gap {
    gap: var(--main-gap);
  }

  &.flex-big-gap {
    gap: var(--main-big-gap);
  }

  &:not(.custom-align-items) {
    align-items: center;
  }

  &.between {
    justify-content: space-between;
  }

  &.around {
    justify-content: space-around;
  }

  &.center {
    justify-content: center;
  }

  &.column {
    flex-direction: column;
  }

  &.column-reverse {
    flex-direction: column-reverse;
  }

  &.start {
    justify-content: start;
  }

  &.flex-end {
    justify-content: end;
  }
}

.after-margin-space {
  margin-right: 0.2em;
}

.children-middle {
  >* {
    display: inline-block;
    vertical-align: middle;
  }
}

.text {
  &-strike {
    text-decoration: line-through;
  }

  &-underline {
    text-decoration: underline;
  }

  &-bold {
    font-weight: bold;
  }
}

.pointers-none {
  pointer-events: none;
}

.pointers-all {
  pointer-events: all;
}

.absolute {
  position: absolute;

  &.full-fill {
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }
}

.relative {
  position: relative;
}

@for $i from 0 through 9 {
  .fade-0#{$i} {
    opacity: $i / 10;
  }
}

@for $i from 1 through 8 {
  .background-- {
    &#{$i} {
      background-color: var(--color--#{$i});
    }
  }

  .border-- {
    &#{$i} {
      border: solid 1px var(--color--#{$i});
    }
  }
}

.height-30vh {
  height: 30vh;

  &-strong {
    height: 30vh;
    min-height: 30vh;
    max-height: 30vh;
  }
}

@mixin strong-height($count) {
  .strong-height-#{$count} {
    height: $count;
    min-height: $count;
    max-height: $count;
  }
}

@mixin strong-width($count) {
  .strong-width-#{$count} {
    width: $count;
    min-width: $count;
    max-width: $count;
  }
}

@mixin strong-square($count) {
  .strong-square-#{$count} {
    width: $count;
    min-width: $count;
    max-width: $count;
    height: $count;
    min-height: $count;
    max-height: $count;
  }
}

@for $i from 1 through 9 {
  @include strong-height(#{$i * 10}vmin);
  @include strong-height(#{$i * 10}vmax);

  @include strong-width(#{$i * 10}vmin);
  @include strong-width(#{$i * 10}vmax);

  @include strong-square(#{$i * 10}vmax);
  @include strong-square(#{$i * 10}vmin);
}

.min-height-30vh {
  min-height: 30vh;
}

.margin-auto {
  margin: auto;
}

.absolute,
.relative {
  &.pos-bottom {
    bottom: 0;
  }

  &.pos-top {
    top: 0;
  }

  &.pos-left {
    left: 0;
  }

  &.pos-right {
    right: 0;
  }
}

.float- {
  &left {
    float: left;
  }

  &right {
    float: right;
  }
}

.non-overscroll {
  overscroll-behavior: none;
}

.pointer,
.pointer-children>* {
  cursor: pointer;
}

.text-height-block {
  height: 1.3em;
}

.relative {
  position: relative;
}

.sticky {
  position: sticky;
  top: 0;
  z-index: 1;
}

.inactive {
  opacity: 0.7;
}

::-webkit-scrollbar {
  width: 2px;
  height: 2px;
}

::-webkit-scrollbar-thumb {
  background-color: darkgrey;
  outline: 1px solid slategrey;
}

.no-scrollbar::-webkit-scrollbar {
  display: none;
}

.no-resize {
  resize: none;
}

:not(.user-select) {
  -moz-user-select: none;
  -webkit-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

.user-select {
  -moz-user-select: text;
  -webkit-user-select: text;
  -ms-user-select: text;
  user-select: text;
}

.for-print {
  &.print-as-a4 {
    height: 29.7cm;
    page-break-inside: avoid;
  }

  &.break-inside-avoid {
    page-break-inside: avoid;
  }
}

@font-face {
  font-family: main;
  src: url(./resource/avenir-next.ttf);
}

a {
  color: var(--text-color);
}

.text- {
  &center {
    text-align: center;
  }

  &right {
    text-align: right;
  }
}

input:-webkit-autofill,
input:-webkit-autofill:hover,
input:-webkit-autofill:focus,
input:-webkit-autofill:active {
  --autofill-background-color: var(--color--2);
  --autofill-color: var(--text-color);

  box-shadow: 0 0 0 30px var(--autofill-background-color) inset !important;
  -webkit-text-fill-color: var(--autofill-color);
  font-size: 1em;
}

.rotate {
  animation: rotate 1s linear infinite;

  &-90 {
    transform: rotate(90deg);
  }
}

@keyframes rotate {
  from {
    transform: rotate(0);
  }

  to {
    transform: rotate(360deg);
  }
}

.--color--ok {
  --svg-color: var(--color--ok);
  color: var(--color--ok);
}